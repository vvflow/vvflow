#!/usr/bin/env python3

from __future__ import print_function
import sys, os
from subprocess import Popen, PIPE
import argparse

parser = argparse.ArgumentParser(description='Quickly plot some data from pipe',
    formatter_class=argparse.RawDescriptionHelpFormatter);

parser.add_argument(
    '-l', '--lines',
    dest='plot_w_lines',
    action='store_true',
    help='plot with lines'
)

parser.add_argument(
    '-p', '--points',
    dest='plot_w_points',
    action='store_true',
    help='plot with points'
)

parser.add_argument(
    '-u', '--using',
    dest='plot_using',
    type=str,
    help='plot using clause'
)

parser.add_argument(
    '--square',
    dest='plot_square',
    action='store_true',
    help='set size ratio square'
)

parser.add_argument(
    '-x',
    dest='xrange',
    nargs=2,
    type=float,
    metavar=('XMIN', 'XMAX'),
    default=(None, None),
    help='set xrange'
)

parser.add_argument(
    '-y',
    dest='yrange',
    nargs=2,
    type=float,
    metavar=('YMIN', 'YMAX'),
    default=(None, None),
    help='set yrange'
)

parser.add_argument(
    '--grid',
    dest='grid',
    choices=['x', 'y', 'xy'],
    type=str,
    default='',
    help='plot major grid'
)

args = parser.parse_args()
if sys.stdout.isatty():
    print("You are trying to write a png to stdout. It may be harmful.", file=sys.stderr)
    print("Aborting.", file=sys.stderr)
    sys.exit(-1)

# os.dup2(0, 9)
# os.close(0)
(rpipe, wpipe) = os.pipe()
gp = Popen(["gnuplot", "/dev/fd/"+str(rpipe)])
import time
def gpw(str, *args, **kwargs):
    os.write(wpipe, str.format(*args, **kwargs).encode())

gpw("""set terminal pngcairo enhanced\n""")
gpw("""unset key\n""")
if args.plot_square:
    gpw("""set size ratio -1\n""")
if args.xrange[0] != None and args.xrange[1] != None:
    gpw("""set xrange [{}:{}]\n""".format(args.xrange[0], args.xrange[1]))
if args.yrange[0] != None and args.yrange[1] != None:
    gpw("""set yrange [{}:{}]\n""".format(args.yrange[0], args.yrange[1]))
if 'x' in args.grid:
    gpw("""set grid ytics\n""")
if 'y' in args.grid:
    gpw("""set grid xtics\n""")

style = "lt 1 pt 0"
if (args.plot_w_points):
    style = "lt 0 pt 7"
    if (args.plot_w_lines):
        style = "lt 1 pt 7"
if args.plot_using:
    args.plot_using = 'u ' + args.plot_using
gpw("plot '/dev/stdin' {} w linespoints {} lc rgb 'black'\n", args.plot_using or "", style)

gpw("exit\n")
os.close(wpipe)
os.close(rpipe)
gp.wait()
